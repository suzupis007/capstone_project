)))
return(summary_stats)
}
summary_stats <- mg_sum_stats(data_mg, variables)
summary_matrix <- matrix(ncol = length(variables), nrow = 5)
colnames(summary_matrix) <- variables
rownames(summary_matrix) <- c("Mean", "Median", "sd", "Min", "Max")
for (i in 1:length(variables)) {
summary_matrix[1, i] <- summary_stats[[paste0(variables[i], "_mean")]]
summary_matrix[2, i] <- summary_stats[[paste0(variables[i], "_median")]]
summary_matrix[3, i] <- summary_stats[[paste0(variables[i], "_sd")]]
summary_matrix[4, i] <- summary_stats[[paste0(variables[i], "_min")]]
summary_matrix[5, i] <- summary_stats[[paste0(variables[i], "_max")]]
}
mg_summary_matrix <- round(summary_matrix, 3)
print(mg_summary_matrix)
data_mg_part1 <- data_mg %>%
select("pct_hh_inc_99999", "pct_employed", "inequality_ratio", "pct_high_housing_costs", "pct_30_min_plus_commute", "pct_hh_other_computer", "pct_hh_internet", "pct_poor_to_fair_health")
data_mg_part2 <- data_mg %>%
select("median_hh_income.x", "pct_highschool_diploma", "school_funding_gap", "population_density", "days_over_90_f", "air_polution_metric", "water_quality", "pct_poor_to_fair_health")
pairs(data_mg_part1, main = "Pairwise Scatterplots of Variables (Part 1)")
pairs(data_mg_part2, main = "Pairwise Scatterplots of Variables (Part 2)")
ggplot(data_mg, aes(x = pct_poor_to_fair_health, y = median_hh_income.x)) +
geom_point() +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatterplot of Percentage of Poor to Fair Health vs. Median Household Income",
x = "Percentage of Poor to Fair Health (Higher number is worse)",
y = "Median Household Income") +
theme_minimal()
ggplot(data_mg, aes(x = school_funding_gap, y = pct_poor_to_fair_health)) +
geom_point() +
geom_smooth(method = "lm", col = "red") +
labs(title = "Scatterplot of Percentage of Poor to Fair Health vs. School Funding Gap",
x = "School Funding Gap",
y = "Percentage of Poor to Fair Health") +
theme_minimal()
trial <- trial
# summarize the data with our package
table1 <-
trial |>
tbl_summary(include = c(age, grade, response))
table1
table_1 <- tbl_summary(qol_data,
include = c(pct_hh_inc_99999,
pct_employed,
inequality_ratio,
pct_high_housing_costs,
pct_30_min_plus_commute,
pct_hh_other_computer,
pct_hh_internet,
median_hh_income.x,
pct_highschool_diploma,
school_funding_gap,
population_density,
days_over_90_f,
air_polution_metric,
water_quality,
pct_poor_to_fair_health))
table_1
# Ensure the trial dataset is loaded and available
# trial <- your_data_loading_function()
# Create the summary table
test_table <- tbl_summary(
data = trial,
include = c(trt, age, marker, response, death),
by = trt,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
) %>%
add_n() %>%
add_difference()
# Print the summary table
test_table
library(gtsummary)
library(dplyr)
# Assuming 'trial' is your dataset and contains the specified columns
test_table <- tbl_summary(
data = trial,
include = c(trt, age, marker, response, death),
by = trt,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
) %>%
add_n() %>%
add_difference()
# Print the summary table
test_table
View(qol_data_long)
# Ensure the trial dataset is loaded and available
# trial <- your_data_loading_function()
# Create the summary table
test_table <- tbl_summary(
data = qol_data_long,
include = c(pct_poor_to_fair_health, life_expectancy_years),
by = race,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
) %>%
add_n() %>%
add_difference()
# inspect dataset structure and summary
str(qol_data)
summary(qol_data)
unique(qol_data_long$race)
# Ensure the trial dataset is loaded and available
# trial <- your_data_loading_function()
# Create the summary table
test_table <- tbl_summary(
data = qol_data_long,
include = c(pct_poor_to_fair_health, life_expectancy_years),
by = race,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
) %>%
add_n()
# Print the summary table
test_table
# Create a list of race variables
race_vars <- c("pct_native_american", "pct_asian", "pct_black", "pct_hispanic", "pct_other_race", "pct_white")
# Reshape data for faceting
qol_data_long <- qol_data %>%
pivot_longer(cols = race_vars, names_to = "race", values_to = "percentage")
# Create faceted plot
ggplot(qol_data_long, aes(x = percentage, y = pct_poor_to_fair_health)) +
geom_point(color = "steelblue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
facet_wrap(~race, scales = "free_x") +
labs(title = "Effect of Race on Report of Poor_to_Fair Health in US Counties",
x = "Percentage of Race",
y = "Percentage of Poor to Fair Health")
# Create a list of race variables
race_vars <- c("pct_native_american", "pct_asian", "pct_black", "pct_hispanic", "pct_other_race", "pct_white")
# Reshape data for faceting
qol_data_long <- qol_data %>%
pivot_longer(cols = race_vars, names_to = "race", values_to = "percentage") %>%
rename("pct_native_american" = "native_american",
"pct_asian" = "asian",
"pct_black" = "black",
"pct_hispanic" = "hispanic",
"pct_other_race" = "other",
"pct_white" = "white")
# Create a list of race variables
race_vars <- c("pct_native_american", "pct_asian", "pct_black", "pct_hispanic", "pct_other_race", "pct_white")
qol_data_long <- qol_data %>%
pivot_longer(
cols = all_of(race_vars),
names_to = "race",
values_to = "percentage"
) %>%
mutate(race = case_when(
race == "pct_native_american" ~ "native_american",
race == "pct_asian" ~ "asian",
race == "pct_black" ~ "black",
race == "pct_hispanic" ~ "hispanic",
race == "pct_other_race" ~ "other",
race == "pct_white" ~ "white",
TRUE ~ race
))
# Create faceted plot
ggplot(qol_data_long, aes(x = percentage, y = pct_poor_to_fair_health)) +
geom_point(color = "steelblue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
facet_wrap(~race, scales = "free_x") +
labs(title = "Effect of Race on Report of Poor_to_Fair Health in US Counties",
x = "Percentage of Race",
y = "Percentage of Poor to Fair Health")
# Ensure the trial dataset is loaded and available
# trial <- your_data_loading_function()
# Create the summary table
test_table <- tbl_summary(
data = qol_data_long,
include = c(pct_poor_to_fair_health, life_expectancy_years),
by = race,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
) %>%
add_n()
# Print the summary table
test_table
# Ensure the trial dataset is loaded and available
# trial <- your_data_loading_function()
# Create the summary table
test_table <- tbl_summary(
data = qol_data_long,
include = c(pct_poor_to_fair_health, life_expectancy_years),
by = race,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table
# Ensure the trial dataset is loaded and available
# trial <- your_data_loading_function()
# Create the summary table
test_table <- tbl_summary(
data = qol_data_long,
include = c(pct_poor_to_fair_health, life_expectancy_years),
by = race,
statistic = list(
all_continuous() ~ "{median} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table
# Ensure the trial dataset is loaded and available
# trial <- your_data_loading_function()
# Create the summary table
test_table <- tbl_summary(
data = qol_data_long,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = race,
statistic = list(
all_continuous() ~ "{median} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table
View(qol_data_long)
library(gtsummary)
# Assuming qol_data is your original dataset and race_vars is a vector of race-related column names
race_vars <- c("pct_native_american", "pct_asian", "pct_black", "pct_hispanic", "pct_other_race", "pct_white")
# Reshape data to long format
qol_data_long <- qol_data %>%
pivot_longer(
cols = all_of(race_vars),
names_to = "race",
values_to = "percentage"
) %>%
mutate(race = case_when(
race == "pct_native_american" ~ "native_american",
race == "pct_asian" ~ "asian",
race == "pct_black" ~ "black",
race == "pct_hispanic" ~ "hispanic",
race == "pct_other_race" ~ "other",
race == "pct_white" ~ "white",
TRUE ~ race
))
# Assuming qol_data_long is now the correctly reshaped dataset
test_table <- tbl_summary(
data = qol_data_long,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = race,
statistic = list(
all_continuous() ~ "{median} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table
View(qol_data_long)
# Assuming qol_data_long is your reshaped dataset
# Filter the dataset for only observations where race == "white"
qol_data_white <- qol_data_long %>%
filter(race == "white")
test_table2 <- tbl_summary(
data = qol_data_white,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = race,
statistic = list(
all_continuous() ~ "{median} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table2
# Assuming qol_data_long is your reshaped dataset
# Filter the dataset for only observations where race == "white"
qol_data_white <- qol_data_long %>%
filter(race == "white")
test_table2 <- tbl_summary(
data = qol_data_white,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = race,
statistic = list(
all_continuous() ~ "{median} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table2
qol_data_black <- qol_data_long %>%
filter(race == "black")
test_table2 <- tbl_summary(
data = qol_data_black,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = race,
statistic = list(
all_continuous() ~ "{median} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table2
View(qol_data_black)
# Assuming qol_data_long is now the correctly reshaped dataset
test_table <- tbl_summary(
data = qol_data_long,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = region,
statistic = list(
all_continuous() ~ "{median} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table
# Assuming qol_data is your original dataset and race_vars is a vector of race-related column names
race_vars <- c("pct_native_american", "pct_asian", "pct_black", "pct_hispanic", "pct_other_race", "pct_white")
# Reshape data to long format
qol_data_long <- qol_data %>%
pivot_longer(
cols = all_of(race_vars),
names_to = "race",
values_to = "percentage"
) %>%
mutate(race = case_when(
race == "pct_native_american" ~ "native_american",
race == "pct_asian" ~ "asian",
race == "pct_black" ~ "black",
race == "pct_hispanic" ~ "hispanic",
race == "pct_other_race" ~ "other",
race == "pct_white" ~ "white",
TRUE ~ race
))
# Assuming qol_data_long is now the correctly reshaped dataset
test_table <- tbl_summary(
data = qol_data_long,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = race,
statistic = list(
all_continuous() ~ "{median} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table
# Assuming qol_data_long is your reshaped dataset
# Filter the dataset for only observations where race == "white"
qol_data_white <- qol_data_long %>%
filter(race == "white")
test_table2 <- tbl_summary(
data = qol_data_white,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = race,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table2
qol_data_black <- qol_data_long %>%
filter(race == "black")
test_table2 <- tbl_summary(
data = qol_data_black,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = race,
statistic = list(
all_continuous() ~ "{median} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table2
# Assuming qol_data is your original dataset and race_vars is a vector of race-related column names
race_vars <- c("pct_native_american", "pct_asian", "pct_black", "pct_hispanic", "pct_other_race", "pct_white")
# Reshape data to long format
qol_data_long <- qol_data %>%
pivot_longer(
cols = all_of(race_vars),
names_to = "race",
values_to = "percentage"
) %>%
mutate(race = case_when(
race == "pct_native_american" ~ "native_american",
race == "pct_asian" ~ "asian",
race == "pct_black" ~ "black",
race == "pct_hispanic" ~ "hispanic",
race == "pct_other_race" ~ "other",
race == "pct_white" ~ "white",
TRUE ~ race
))
# Assuming qol_data_long is now the correctly reshaped dataset
test_table <- tbl_summary(
data = qol_data_long,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = race,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table
# Assuming qol_data_long is your reshaped dataset
# Filter the dataset for only observations where race == "white"
qol_data_white <- qol_data_long %>%
filter(race == "white")
test_table2 <- tbl_summary(
data = qol_data_white,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = race,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table2
qol_data_black <- qol_data_long %>%
filter(race == "black")
test_table2 <- tbl_summary(
data = qol_data_black,
include = c(pct_poor_to_fair_health, life_expectancy_years, pct_voters),
by = race,
statistic = list(
all_continuous() ~ "{mean} ({sd})",
all_dichotomous() ~ "{p}%"
),
missing = "no"
)
# Print the summary table
test_table2
table_1 <- tbl_summary(qol_data,
include = c(pct_hh_inc_99999,
pct_employed,
inequality_ratio,
pct_high_housing_costs,
pct_30_min_plus_commute,
pct_hh_other_computer,
pct_hh_internet,
median_hh_income.x,
pct_highschool_diploma,
school_funding_gap,
population_density,
days_over_90_f,
air_polution_metric,
water_quality,
pct_poor_to_fair_health))
table_1
unique(qol_data_long$race)
# create longer table with race as a column
qol_data_long <- qol_data %>%
pivot_longer(
cols = all_of(race_vars),
names_to = "race",
values_to = "percentage"
) %>%
mutate(race = case_when(
race == "pct_native_american" ~ "native_american",
race == "pct_asian" ~ "asian",
race == "pct_black" ~ "black",
race == "pct_hispanic" ~ "hispanic",
race == "pct_other_race" ~ "other",
race == "pct_white" ~ "white",
TRUE ~ race
))
# new data frames by filtering for individual races
qol_data_na <- qol_data_long %>%
filter(race == "native_american")
qol_data_asian <- qol_data_long %>%
filter(race == "asian")
qol_data_black <- qol_data_long %>%
filter(race == "black")
qol_data_hispanic <- qol_data_long %>%
filter(race == "hispanic")
qol_data_white <- qol_data_long %>%
filter(race == "white")
qol_data_other <- qol_data_long %>%
filter(race == "other")
summary_stats(qol_data_na)
summary(qol_data_na)
summary(qol_data_na$pct_poor_to_fair_health)
View(qol_data_na)
summary(qol_data_na$pct_poor_to_fair_health)
summary(qol_data_asian$pct_poor_to_fair_health)
summary(qol_data_black$pct_poor_to_fair_health)
summary(qol_data_hispanic$pct_poor_to_fair_health)
summary(qol_data_white$pct_poor_to_fair_health)
summary(qol_data_other$pct_poor_to_fair_health)
